#include "Nodes/FroxFlipNode.h"
#include "Shared.h"
#include "FroxTypes.h"

#include "Frox/Frox/ComputeFlow.h"
#include "Frox/Frox/FlipComputeNode.h"

#define LOCTEXT_NAMESPACE "UFroxFlipNode"

#if WITH_EDITORONLY_DATA
void UFroxFlipNode::AllocateDefaultPins()
{
	Super::AllocateDefaultPins();

	UEdGraphPin* InPin = CreatePin(EGPD_Input, UFroxNodeBase::PC_Frame, TEXT("In"));
	UEdGraphPin* VerticalPin = CreatePin(EGPD_Input, UFroxNodeBase::PC_Property, TEXT("Vertical"));
	VerticalPin->DefaultValue = TEXT("true");
	VerticalPin->AutogeneratedDefaultValue = TEXT("true");

	UEdGraphPin* HorizontalPin = CreatePin(EGPD_Input, UFroxNodeBase::PC_Property, TEXT("Horizontal"));
	HorizontalPin->DefaultValue = TEXT("true");
	HorizontalPin->AutogeneratedDefaultValue = TEXT("true");

	CreatePin(EGPD_Output, UFroxNodeBase::PC_Frame, TEXT("Out"));
}
#endif

frox::ComputeNode* UFroxFlipNode::CreateFroxNode(frox::ComputeFlow* Flow) const
{
	check(Flow != nullptr);

	auto FlipComputeNode = Flow->CreateNode<frox::FlipComputeNode>();
	check(FlipComputeNode != nullptr);

	FlipComputeNode->SetVertical(bVertical);
	FlipComputeNode->SetHorizontal(bHorizontal);

	return FlipComputeNode;
}

#undef LOCTEXT_NAMESPACE