#include "Nodes/FroxInRangeNode.h"
#include "Shared.h"
#include "FroxTypes.h"

#include "Frox/Frox/ComputeFlow.h"
#include "Frox/Frox/InRangeComputeNode.h"

#define LOCTEXT_NAMESPACE "UFroxInRangeNode"

#if WITH_EDITORONLY_DATA
void UFroxInRangeNode::AllocateDefaultPins()
{
	Super::AllocateDefaultPins();

	UEdGraphPin* InPin = CreatePin(EGPD_Input, UFroxNodeBase::PC_Frame, TEXT("In"));
	UEdGraphPin* LowPin = CreatePin(EGPD_Input, UFroxNodeBase::PC_Property, TEXT("Low"));
	LowPin->DefaultValue = TEXT("0");
	LowPin->AutogeneratedDefaultValue = TEXT("0");

	UEdGraphPin* HighPin = CreatePin(EGPD_Input, UFroxNodeBase::PC_Property, TEXT("High"));
	HighPin->DefaultValue = TEXT("1");
	HighPin->AutogeneratedDefaultValue = TEXT("1");

	CreatePin(EGPD_Output, UFroxNodeBase::PC_Frame, TEXT("Out"));
}
#endif

frox::ComputeNode* UFroxInRangeNode::CreateFroxNode(frox::ComputeFlow* Flow) const
{
	check(Flow != nullptr);

	auto InRangeComputeNode = Flow->CreateNode<frox::InRangeComputeNode>();
	check(InRangeComputeNode != nullptr);

	InRangeComputeNode->SetLow(Low);
	InRangeComputeNode->SetHigh(High);

	return InRangeComputeNode;
}

#undef LOCTEXT_NAMESPACE